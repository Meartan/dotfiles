snippet h
	/**
	 * ${1:`Filename("", "untitled")`}
	 *
	 * ${2:Description if available.}
	 *
	 * @author Ariel Gerardo Rios <mailto:${3:ariel.gerardo.rios@gmail.com}>
	 *
	 * $Rev$
	 * $LastChangedBy$
	 * $LastChangedDate$
	 */

	
	${4:// TODO: code here}

	// vim:ft=java:
snippet hm
	/**
	 * ${1:`Filename("", "untitled")`}
	 *
	 * ${2:Description if available.}
	 *
	 * @author Ariel Gerardo Rios <mailto:${3:ariel.rios@movile.com}>
	 *
	 * $Rev$
	 * $LastChangedBy$
	 * $LastChangedDate$
	 */

	
	${4:// TODO: code here}

	// vim:ft=java:
snippet main
	public static void main (String [] args) {
		${1:/* code */}
	}
snippet pa
	package
snippet pu
	public
snippet po
	protected
snippet pr
	private
snippet st
	static
snippet fi
	final
snippet ab
	abstract
snippet re
	return
snippet br
	break;
snippet de
	default:
		${1}
snippet tc
	try {
		${1:// TODO: catchable code here}
	}
	catch(${2:Exception} ${3:e}) {
		e.printStackTrace();
		${4:// TODO: handler code here}
	}
snippet th
	throw 
snippet sy
	synchronized
snippet im
	import
snippet j.u
	java.util
snippet j.i
	java.io.
snippet j.b
	java.beans.
snippet j.n
	java.net.
snippet j.m
	java.math.
snippet if
	if (${1}) {
		${2:// code here}
	}
snippet el
	else {
		${1:// code here}
	}
snippet elif
	else if (${1}) { 
		${2:// code here}
	}
snippet wh
	while (${1}) {
		${2:// code here}
	}
snippet for
	for (${1}; ${2}; ${3}) {
		${4:// code here}
	}
snippet fore
	for (${1} : ${2}) {
		${3:// code here}
	}
snippet sw
	switch (${1}) {
		${2: // code here}
	}
snippet cs
	case ${1}:
		${2: // code here}
	${3}
snippet agr
	<a href="mailto:ariel.gerardo.rios@gmail.com">Ariel Gerardo R&iacute;os</a>
snippet agrm
	<a href="mailto:ariel.rios@movile.com">Ariel Gerardo R&iacute;os</a>
snippet cl
	/** 
	 * ${1:// TODO: Define this class.}
	 *
	 * @author Ariel Gerardo Ríos <mailto:${2:ariel.gerardo.rios@gmail.com}>
	*/
	${3:public} class ${4:`Filename("", "untitled")`} ${5:extends Object} { 

		${6:// TODO: Write some code :)}
		
		/* (non-javadoc)
		 * @see java.lang.Object#toString(java.lang.Object)
		 */
		@Override
		public String toString() {
			return String.format("<$4>");
		}

		/* (non-Javadoc)
		 * @see java.lang.Object#hashCode()
		 */
		@Override
		public int hashCode() {
			return this.toString().hashCode();
		}

		/* (non-Javadoc)
		 * @see java.lang.Object#equals(java.lang.Object)
		 */
		@Override
		public boolean equals(Object o) {

			if (this == o) {	
				return true;
			}
			if (o == null) {
				return false;
			}
			if (this.getClass() != o.getClass()) {
				return false;
			}

			final $4 newObject = ($4) o;
			return this.hashCode() == newObject.hashCode();
		}
	}
snippet test
	/** 
	 * ${1:// TODO: Define this class.}
	 *
	 * @author Ariel Gerardo Ríos <mailto:${2:ariel.gerardo.rios@gmail.com}>
	*/
	${4:public} class ${5:`Filename("", "untitled")`} ${6:extends TestCase} { 

		/** 
		 * Setting up the environment.
		 *
		*/
		public void setUp() {
			${7:// TODO Initialize the environment }
		}
		                                                   
		/** 
		 * Releasing taken rosurces for this test.
		 *
		*/
		public void tearDown() {
			${8:// TODO Release taken resources }
		}
		
		${9:// TODO: Write some tests :)}
	}
snippet in
	/** 
	 * ${1:Interface definition.}
	 *
	 * @author ${2}
	 * @version ${3}    
	*/
	interface ${4:`Filename("", "untitled")`} ${5:extends Parent}${6}
snippet m
	/** 
	 * ${1:Method definition.}
	 *
	 * @param ${2}
	 * @return ${3}
	 * @throws ${4}
	*/
	${5:public} ${6:void} ${7:method}(${8}) ${9:throws Exception} { 
		${10:// TODO: code here.} 
	}
snippet v
	${1:String} ${2:var}${3: = null}${4};
snippet gs
	/** 
	 * Sets a value for member $3.
	 *
	 * @param $4: The new value to set.
	*/
	${1:public} ${2:void} set${3:variable}(final ${4:paramType} ${5:paramName}) { 
		this.$3 = $5;
	}

	/** 
	 * Returns the value of member $3.
	 *
	 * @return $4: The current value of $3 member.
	*/
	${6:public} $4 get$3() {
		return this.$3;
	}
snippet co
	public static final ${1:String} ${2:var} = ${3};
snippet cos
	public static final String ${1:var} = "${2}";
snippet as
	assert ${1:test} : "${2:Failure message}";
snippet .
	this.
snippet sopl
	System.out.println
snippet sop
	System.out.print
snippet debug
	logger.debug(String.format("UUID=%s ${1:log entry}", uuid));
snippet info
	logger.info(String.format("UUID=%s ${1:log entry}", uuid));
snippet error
	logger.error(String.format("UUID=%s ${1:log entry}", uuid));
snippet warn
	logger.warn(String.format("UUID=%s ${1:log entry}", uuid));
snippet code
	<code>${1}</code>
snippet d
	/** ${1: TODO here goes the doc :O} */
snippet dd
	/**
	 * ${1:TODO here goes the doc :O}
	 */
snippet rabbitmq
	<a href="http://www.rabbitmq.com">RabbitMQ</a>
snippet a
	<a href="${1:put the URL}">${2:put the text}</a>
snippet l
	{@link ${1:put the class} ${2:put the text}}
snippet s
	@see ${1}
snippet li
	<li>${1}</li>
snippet ul
	<ul>${1}</ul>
snippet ol
	<ol>${1}</ol>
snippet executor
	<a href="http://docs.oracle.com/javase/tutorial/essential/concurrency/executors.html">ExecutorService</a>
snippet sbs
	<a href="http://xwiki.movile.com/xwiki/bin/view/Main/+billingsystem+">SBS platform</a>
snippet jsbs
	<a href="http://xwiki.movile.com/xwiki/bin/view/Main/JSBS">JSBS</a>
snippet json
	<a href="http://code.google.com/p/json-simple/">JSONObject</a>
snippet requester
	<a href="http://xwiki.movile.com/xwiki/bin/view/requester/systemGeneral">Requester platform</a>
snippet inh
	/**
	 * {@inheritdoc}
	 */
snippet p
	@param
snippet atlas
	<a href="http://xwiki.movile.com/xwiki/bin/view/Main/atlasWebServiceDocumentation">Atlas Platform</a>
